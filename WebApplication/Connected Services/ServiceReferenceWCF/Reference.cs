//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceWCF
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/ModelAPI", IsReference=true)]
    public partial class Event : object
    {
        
        private System.Guid EventIdField;
        
        private ServiceReferenceWCF.Media MediaField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EventId
        {
            get
            {
                return this.EventIdField;
            }
            set
            {
                this.EventIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceWCF.Media Media
        {
            get
            {
                return this.MediaField;
            }
            set
            {
                this.MediaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Media", Namespace="http://schemas.datacontract.org/2004/07/ModelAPI", IsReference=true)]
    public partial class Media : object
    {
        
        private System.DateTime DateOfCreationField;
        
        private bool DeletedField;
        
        private string DescriptionField;
        
        private System.Collections.Generic.List<ServiceReferenceWCF.Event> EventField;
        
        private string FormatField;
        
        private string FullPathField;
        
        private System.Guid MediaIdField;
        
        private string NameField;
        
        private System.Collections.Generic.List<ServiceReferenceWCF.People> PeopleField;
        
        private System.Collections.Generic.List<ServiceReferenceWCF.Place> PlaceField;
        
        private System.Collections.Generic.List<ServiceReferenceWCF.Tag> TagField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfCreation
        {
            get
            {
                return this.DateOfCreationField;
            }
            set
            {
                this.DateOfCreationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted
        {
            get
            {
                return this.DeletedField;
            }
            set
            {
                this.DeletedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceWCF.Event> Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Format
        {
            get
            {
                return this.FormatField;
            }
            set
            {
                this.FormatField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullPath
        {
            get
            {
                return this.FullPathField;
            }
            set
            {
                this.FullPathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MediaId
        {
            get
            {
                return this.MediaIdField;
            }
            set
            {
                this.MediaIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceWCF.People> People
        {
            get
            {
                return this.PeopleField;
            }
            set
            {
                this.PeopleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceWCF.Place> Place
        {
            get
            {
                return this.PlaceField;
            }
            set
            {
                this.PlaceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceWCF.Tag> Tag
        {
            get
            {
                return this.TagField;
            }
            set
            {
                this.TagField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="People", Namespace="http://schemas.datacontract.org/2004/07/ModelAPI", IsReference=true)]
    public partial class People : object
    {
        
        private System.Collections.Generic.List<ServiceReferenceWCF.Media> MediaField;
        
        private string NameField;
        
        private System.Guid PeopleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceWCF.Media> Media
        {
            get
            {
                return this.MediaField;
            }
            set
            {
                this.MediaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PeopleId
        {
            get
            {
                return this.PeopleIdField;
            }
            set
            {
                this.PeopleIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Place", Namespace="http://schemas.datacontract.org/2004/07/ModelAPI", IsReference=true)]
    public partial class Place : object
    {
        
        private ServiceReferenceWCF.Media MediaField;
        
        private string NameField;
        
        private System.Guid PlaceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceWCF.Media Media
        {
            get
            {
                return this.MediaField;
            }
            set
            {
                this.MediaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PlaceId
        {
            get
            {
                return this.PlaceIdField;
            }
            set
            {
                this.PlaceIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="http://schemas.datacontract.org/2004/07/ModelAPI", IsReference=true)]
    public partial class Tag : object
    {
        
        private ServiceReferenceWCF.Media MediaField;
        
        private string NameField;
        
        private System.Guid TagIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceWCF.Media Media
        {
            get
            {
                return this.MediaField;
            }
            set
            {
                this.MediaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TagId
        {
            get
            {
                return this.TagIdField;
            }
            set
            {
                this.TagIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceWCF.IWcf")]
    public interface IWcf
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventWCF/GetByIdEvent", ReplyAction="http://tempuri.org/IEventWCF/GetByIdEventResponse")]
        System.Threading.Tasks.Task<ServiceReferenceWCF.Event> GetByIdEventAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventWCF/GetAllEvent", ReplyAction="http://tempuri.org/IEventWCF/GetAllEventResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceWCF.Event>> GetAllEventAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventWCF/InsertEvent", ReplyAction="http://tempuri.org/IEventWCF/InsertEventResponse")]
        System.Threading.Tasks.Task InsertEventAsync(ServiceReferenceWCF.Event iEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventWCF/UpdateEvent", ReplyAction="http://tempuri.org/IEventWCF/UpdateEventResponse")]
        System.Threading.Tasks.Task UpdateEventAsync(ServiceReferenceWCF.Event iEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventWCF/DeleteEvent", ReplyAction="http://tempuri.org/IEventWCF/DeleteEventResponse")]
        System.Threading.Tasks.Task DeleteEventAsync(ServiceReferenceWCF.Event iEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediatWCF/GetByIdMedia", ReplyAction="http://tempuri.org/IMediatWCF/GetByIdMediaResponse")]
        System.Threading.Tasks.Task<ServiceReferenceWCF.Media> GetByIdMediaAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediatWCF/GetAllMedia", ReplyAction="http://tempuri.org/IMediatWCF/GetAllMediaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceWCF.Media>> GetAllMediaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediatWCF/GetAllNotDeletedMedia", ReplyAction="http://tempuri.org/IMediatWCF/GetAllNotDeletedMediaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceWCF.Media>> GetAllNotDeletedMediaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediatWCF/FindByContentTypeMedia", ReplyAction="http://tempuri.org/IMediatWCF/FindByContentTypeMediaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceWCF.Media>> FindByContentTypeMediaAsync(string searchI, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediatWCF/InsertMedia", ReplyAction="http://tempuri.org/IMediatWCF/InsertMediaResponse")]
        System.Threading.Tasks.Task InsertMediaAsync(ServiceReferenceWCF.Media media);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediatWCF/UpdateMedia", ReplyAction="http://tempuri.org/IMediatWCF/UpdateMediaResponse")]
        System.Threading.Tasks.Task UpdateMediaAsync(ServiceReferenceWCF.Media media);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediatWCF/DeleteMedia", ReplyAction="http://tempuri.org/IMediatWCF/DeleteMediaResponse")]
        System.Threading.Tasks.Task DeleteMediaAsync(ServiceReferenceWCF.Media media);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonWCF/GetByIdPeople", ReplyAction="http://tempuri.org/IPersonWCF/GetByIdPeopleResponse")]
        System.Threading.Tasks.Task<ServiceReferenceWCF.People> GetByIdPeopleAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonWCF/GetAllPeople", ReplyAction="http://tempuri.org/IPersonWCF/GetAllPeopleResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceWCF.People>> GetAllPeopleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonWCF/InsertPeople", ReplyAction="http://tempuri.org/IPersonWCF/InsertPeopleResponse")]
        System.Threading.Tasks.Task InsertPeopleAsync(ServiceReferenceWCF.People people);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonWCF/UpdatePeople", ReplyAction="http://tempuri.org/IPersonWCF/UpdatePeopleResponse")]
        System.Threading.Tasks.Task UpdatePeopleAsync(ServiceReferenceWCF.People people);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonWCF/DeletePeople", ReplyAction="http://tempuri.org/IPersonWCF/DeletePeopleResponse")]
        System.Threading.Tasks.Task DeletePeopleAsync(ServiceReferenceWCF.People people);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagWCF/GetByIdTag", ReplyAction="http://tempuri.org/ITagWCF/GetByIdTagResponse")]
        System.Threading.Tasks.Task<ServiceReferenceWCF.Tag> GetByIdTagAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagWCF/GetAllTag", ReplyAction="http://tempuri.org/ITagWCF/GetAllTagResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceWCF.Tag>> GetAllTagAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagWCF/InsertTag", ReplyAction="http://tempuri.org/ITagWCF/InsertTagResponse")]
        System.Threading.Tasks.Task InsertTagAsync(ServiceReferenceWCF.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagWCF/UpdateTag", ReplyAction="http://tempuri.org/ITagWCF/UpdateTagResponse")]
        System.Threading.Tasks.Task UpdateTagAsync(ServiceReferenceWCF.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagWCF/DeleteTag", ReplyAction="http://tempuri.org/ITagWCF/DeleteTagResponse")]
        System.Threading.Tasks.Task DeleteTagAsync(ServiceReferenceWCF.Tag tag);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IWcfChannel : ServiceReferenceWCF.IWcf, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class WcfClient : System.ServiceModel.ClientBase<ServiceReferenceWCF.IWcf>, ServiceReferenceWCF.IWcf
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WcfClient() : 
                base(WcfClient.GetDefaultBinding(), WcfClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IPostComment.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WcfClient(EndpointConfiguration endpointConfiguration) : 
                base(WcfClient.GetBindingForEndpoint(endpointConfiguration), WcfClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WcfClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WcfClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WcfClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WcfClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WcfClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceWCF.Event> GetByIdEventAsync(System.Guid id)
        {
            return base.Channel.GetByIdEventAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceWCF.Event>> GetAllEventAsync()
        {
            return base.Channel.GetAllEventAsync();
        }
        
        public System.Threading.Tasks.Task InsertEventAsync(ServiceReferenceWCF.Event iEvent)
        {
            return base.Channel.InsertEventAsync(iEvent);
        }
        
        public System.Threading.Tasks.Task UpdateEventAsync(ServiceReferenceWCF.Event iEvent)
        {
            return base.Channel.UpdateEventAsync(iEvent);
        }
        
        public System.Threading.Tasks.Task DeleteEventAsync(ServiceReferenceWCF.Event iEvent)
        {
            return base.Channel.DeleteEventAsync(iEvent);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceWCF.Media> GetByIdMediaAsync(System.Guid id)
        {
            return base.Channel.GetByIdMediaAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceWCF.Media>> GetAllMediaAsync()
        {
            return base.Channel.GetAllMediaAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceWCF.Media>> GetAllNotDeletedMediaAsync()
        {
            return base.Channel.GetAllNotDeletedMediaAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceWCF.Media>> FindByContentTypeMediaAsync(string searchI, string type)
        {
            return base.Channel.FindByContentTypeMediaAsync(searchI, type);
        }
        
        public System.Threading.Tasks.Task InsertMediaAsync(ServiceReferenceWCF.Media media)
        {
            return base.Channel.InsertMediaAsync(media);
        }
        
        public System.Threading.Tasks.Task UpdateMediaAsync(ServiceReferenceWCF.Media media)
        {
            return base.Channel.UpdateMediaAsync(media);
        }
        
        public System.Threading.Tasks.Task DeleteMediaAsync(ServiceReferenceWCF.Media media)
        {
            return base.Channel.DeleteMediaAsync(media);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceWCF.People> GetByIdPeopleAsync(System.Guid id)
        {
            return base.Channel.GetByIdPeopleAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceWCF.People>> GetAllPeopleAsync()
        {
            return base.Channel.GetAllPeopleAsync();
        }
        
        public System.Threading.Tasks.Task InsertPeopleAsync(ServiceReferenceWCF.People people)
        {
            return base.Channel.InsertPeopleAsync(people);
        }
        
        public System.Threading.Tasks.Task UpdatePeopleAsync(ServiceReferenceWCF.People people)
        {
            return base.Channel.UpdatePeopleAsync(people);
        }
        
        public System.Threading.Tasks.Task DeletePeopleAsync(ServiceReferenceWCF.People people)
        {
            return base.Channel.DeletePeopleAsync(people);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceWCF.Tag> GetByIdTagAsync(System.Guid id)
        {
            return base.Channel.GetByIdTagAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceWCF.Tag>> GetAllTagAsync()
        {
            return base.Channel.GetAllTagAsync();
        }
        
        public System.Threading.Tasks.Task InsertTagAsync(ServiceReferenceWCF.Tag tag)
        {
            return base.Channel.InsertTagAsync(tag);
        }
        
        public System.Threading.Tasks.Task UpdateTagAsync(ServiceReferenceWCF.Tag tag)
        {
            return base.Channel.UpdateTagAsync(tag);
        }
        
        public System.Threading.Tasks.Task DeleteTagAsync(ServiceReferenceWCF.Tag tag)
        {
            return base.Channel.DeleteTagAsync(tag);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPostComment))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPostComment))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/PC");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return WcfClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IPostComment);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return WcfClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IPostComment);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IPostComment,
        }
    }
}
